name: Rust

on:
  push:
    paths:
    - "**/*.rs"
    - "**/*.yml"
    - "**/*.toml"
  pull_request:
    paths:
    - "**/*.rs"
    - "**/*.yml"
    - "**/*.toml"

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        rust: [stable]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
    - name: Environment Variables (Windows)
      if: matrix.os == 'windows-latest'
      run: echo "DATABASE_URL=sqlite:$(echo "$pwd\reference.db")" >> $env:GITHUB_ENV
    - name: Environment Variables (Linux)
      if: matrix.os != 'windows-latest'
      run: echo "DATABASE_URL=sqlite:$(echo "/${PWD##/}/reference.db")" >> $GITHUB_ENV
    - name: Check path
      run: echo $DATABASE_URL
    - name: Build
      run: cargo test --verbose
  test_ubuntu_install:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - name: Run install steps
      run: sudo apt-get update && sudo apt-get install xorg-dev libxcb1-dev libxcb-shape0-dev libxcb-xfixes0-dev
    - name: Environment Variables
      run: echo "DATABASE_URL=sqlite:$(echo "/${PWD##/}/reference.db")" >> $GITHUB_ENV
    - name: Test bookstore with copypaste
      run: cargo +nightly test -Z package-features --features bookstore-tui/copypaste
  fmt:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Formatting
      run: rustup component add rustfmt && cargo fmt -- --check
  clippy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Run clippy
      run: rustup component add clippy && cargo clippy
